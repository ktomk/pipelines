name: CI

on:
  push:
    branches-ignore:
      - travis-ci
  pull_request:

jobs:
  ci:
    name: .travis.yml / PHP ${{ matrix.php-version }} / ${{ matrix.machine }}
    runs-on: ${{ matrix.machine }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        machine: ['ubuntu-20.04']
        php-version: ['8.2', '8.1', '8.0', '7.4', '7.3', '7.1', '7.0', '5.6']
        experimental: [false]
        xdebug: ['xdebug']
        include:
          - machine: 'ubuntu-20.04'
            php-version: '7.2'
            experimental: false
            xdebug: 'xdebug-2.9.8'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          extensions: ${{ matrix.xdebug }}, yaml

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/composer
            ~/.cache/pipelines
            vendor
          key: pipelines-${{ hashFiles('**/bitbucket-pipelines.yml') }}-${{ hashFiles('**/composer.lock') }}-${{ matrix.php-version }}-${{ runner.os }}
          restore-keys: |
            composer-${{ hashFiles('**/composer.lock') }}-${{ runner.os }}
            composer-${{ hashFiles('**/composer.lock') }}-
            composer-
            pipelines-${{ hashFiles('**/bitbucket-pipelines.yml') }}-${{ hashFiles('**/composer.lock') }}-${{ matrix.php-version }}-
            pipelines-${{ hashFiles('**/bitbucket-pipelines.yml') }}-${{ hashFiles('**/composer.lock') }}-
            pipelines-${{ hashFiles('**/bitbucket-pipelines.yml') }}-
            pipelines-

      - uses: ktomk/run-travis-yml@v1
        with:
          allow_failure: ${{ matrix.experimental }}
        env:
          TRAVIS_PHP_VERSION: ${{ matrix.php-version }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: phar-build-${{ runner.os }}-${{ matrix.php-version }}
          retention-days: 1
          path: |
            build/build-pipelines-phar.log
            build/pipelines.phar

  ci-phar53:
    runs-on: 'ubuntu-20.04'
    name: php53-phar / ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pipelines
          key: pipelines-ci-phar53-${{ hashFiles('**/*.yml') }}
          restore-keys: |
            pipelines-ci-phar53-

      - name: Build phar with php 5.3
        uses: ./.github/action/pipeline
        with:
          pipeline: bitbucket-pipelines.yml --pipeline custom/build-phar-php-5.3

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: phar-build-${{ runner.os }}-5.3
          retention-days: 1
          path: |
            build/build-pipelines-phar.log
            build/pipelines.phar

  collect:
    runs-on: 'ubuntu-20.04'
    needs: [ci, ci-phar53]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          path: build/github/collect

      - name: collect artifacts
        shell: bash
        run: |
          lib/script/collect.sh build/github/collect && r=$? || r=$?
          tar -cvf build/github/phar-artifacts.tar -C build/github collect
          exit $r

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: phar-builds
          retention-days: 2
          path: build/github/phar-artifacts.tar
